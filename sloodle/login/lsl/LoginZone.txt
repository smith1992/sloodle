// Landing zone script.
// Copyright Edmund Edgar, 2006-10-30

// This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

// For details about what this script is for and how it works, see the following discussion:
// http://www.sloodle.com/mod/forum/discuss.php?d=155

list avatarsDone; // a list of avatars for whom we've already sent a request.
integer clearAvatarsDoneListTiming = 3600; // While testing, we'll clear out the list of avatars we've seen before once every hour.

// The following will need to be set for each Moodle installation.
// It can be copied into the prim from a screen in Sloodle.
// We'll need to figure out how to manage this if a lot of different prims all need the same info.
string moodleinstall = "SLOODLE_SCRIPT_URL_WITH_PASSWORD";

key http_id; 

// Tell Sloodle our position and size. 
// This will be called when we are rezzed or moved. 
// That way the server will always know where the landing zone prim is, and can give users appropriate landing zone coordinates.
send_position_to_server()
{

	string url = moodleinstall + "&pos=" + (string)llGetPos() + "&size=" + (string)llGetScale()+"&region="+llGetRegionName();        
	llHTTPRequest(url,[],"");    

}

default
{

	state_entry()
	{       
		send_position_to_server();
		llVolumeDetect(TRUE); // This makes the prim phantom, so people can fall straight through it, and sets up detection of when someone collides with its edge or any point inside it.
		llSetTimerEvent(clearAvatarsDoneListTiming); // timeout to clear list for testing
	}

	collision_start(integer num_detected)
	{
		integer i;
		for (i = 0; i < num_detected; i++)
		{

			// only send one request per user. If we've already seen the user before since we last cleared out the list, ignore them.
			integer index = llListFindList( avatarsDone, [llDetectedName(i)] );            
			if (index == -1) { 

				// The avatar size probably isn't necessary, but we're trapping it in case it gives us a clue why although the x and y coordinates of the avatars who get teleported into the prim are exactly what we request, the z coordinate is sometimes 1 meter or so off.
				string url = moodleinstall+"&req=userinfo&avname="+llEscapeURL(llDetectedName(i))+"&uuid="+(string)llDetectedKey(i)+"&pos="+(string)llDetectedPos(i)+"&avsize="+(string)llGetAgentSize(llDetectedKey(i));
				http_id = llHTTPRequest(url,[],"");
				//llWhisper(0,url); // just for testing. This contains the password, so it has to be turned off in a live installation.
				avatarsDone += [llDetectedName(i)];

			}
		}
	}

	// Clear out the avatar list, and set the timer to do the same thing again.
	// Probably not need in a non-demo installation.
	timer() 
	{
		avatarsDone = [];    
		llSetTimerEvent(clearAvatarsDoneListTiming);
	}

	moving_end()
	{
		send_position_to_server();
	}

}
