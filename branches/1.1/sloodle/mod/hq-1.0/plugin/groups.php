<?php
/**
* Defines a plugin class for the SLOODLE hq -
* 
* @package sloodle
* @copyright Copyright (c) 2008 Sloodle (various contributors)
* @license http://www.gnu.org/licenses/gpl-3.0.html GNU GPL v3
*
* @contributer Paul G. Preibisch - aka Fire Centaur 
* 
* ADDGROUP - This function will create a new group in the course specified only if it doesnt already exist
* 
* Data expected: SOURCEUUID:uuid|groupName:name
*        
* @return: HTTP RESPONSE:
* 
* LINE 0: status code | status descriptor  
*             778001  |  GROUPS             - for some reason could not create a group, possible database problem?
*             778002  |  GROUPS             - group already exists 
*                  1  |  OK                 - group added successfully
* 
* LINE 1:  SENDERUUID:uuid of sender
* LINE 2:  RESPONSE:CREATEGROUPOK
* LINE 3:  GROUPNAME:name|GROUPID:gid  //data line
*/
/** SLOODLE course object data structure */
require_once(SLOODLE_LIBROOT.'/sloodlecourseobject.php');

class sloodle_hq_plugin_groups {

     /*
     *  getGrps($data) will return all groups in the course
     *  outputs:
     *  1|OK|||||2102f5ab-6854-4ec3-aec5-6cd6233c31c6
        RESPONSE:groups|getGrps
        INDEX:index
        GROUPS:Group A,MEMBERS:11|Group B,MEMBERS:10|Group C,MEMBERS:10|Group D,MEMBERS:12|Group E,MEMBERS:10|Team A,MEMBERS:5|Team B,MEMBERS:5
        numGroups:7
     * 
     * TRIGGER:  You can triggthis function by adding the sloodle_api.lsl script to your prim, then executing the following function:
     * llMessageLinked(LINK_SET, PLUGIN_CHANNEL, "plugin:groups,function:getGrps\nindex:0|groupsPerPage:9", NULL_KEY);
     * 
     * OUTPUT HANDLER
     * In second life, you can add the following code to handle the output generated by this function:
     * 
     * 
     */
     
     function getGrps($data){
        global $sloodle, $sCourseObj;
        $data=$sloodle->request->optional_param('data'); 
        $bits = explode("|", $data);
        $index = getFieldData($bits[0]);
        $groupsPerPage = getFieldData($bits[1]);
        
        $groups = groups_get_all_groups($sCourseObj->courseId);
        $sloodle->response->set_status_code(1);             //line 0 
        $sloodle->response->set_status_descriptor('OK'); //line 0 
        $dataLine="";
        $counter = 0;
        foreach($groups as $g){
             if (($counter>=($index*$groupsPerPage))&&($counter<($index*$groupsPerPage+$groupsPerPage))){
                if ($counter!=0) $dataLine.="|";
                 $dataLine .= "GRP:".$g->name;
                $groupMembers =groups_get_members($g->id);
                $numMembers = count($groupMembers);                
                $dataLine .= ",MBRS:".$numMembers;                
             }
             $counter++;
        }
        $sloodle->response->add_data_line("INDEX:". $index);   
        $sloodle->response->add_data_line($dataLine);//line 9
        $sloodle->response->add_data_line("numGroups:".$counter);//line 9        
     }
     function getGrpMbrs($data){
        global $sloodle, $sCourseObj;
        $data=$sloodle->request->optional_param('data'); 
        $bits = explode("|", $data);
        $groupName = getFieldData($bits[0]);
        $page = getFieldData($bits[1]);   
       
        $groupId = groups_get_group_by_name($sCourseObj->courseId,$groupName);             if ($groupId){
            $groupMembers =groups_get_members($groupId);
            if ($groupMembers){                
              $sloodle->response->set_status_code(1);          //line 0    
              $sloodle->response->set_status_descriptor('OK'); //line 0 
              $dataLine="GRPMBRS:";
              $counter=0;
              foreach($groupMembers as $gm){                  
                    $userid = $gm->id; 
                    $sloodledata = get_record('sloodle_users', 'userid', $gm->id);                     if ($sloodledata){
                        if (($counter>=($page*10))&&($counter<($page*10+10))){   
                            if ($counter!=$page*10){                            
                                $dataLine.=",";
                            }
                            $dataLine .= $sloodledata->avname;     
                            
                        }
                        $counter++;
                    }
              }
              $sloodle->response->add_data_line($dataLine);
              $sloodle->response->add_data_line("numMembers:".$counter);
            }else {
             $sloodle->response->set_status_code(778003);          //line 0        
             $sloodle->response->set_status_descriptor('GROUPS'); //line 0
            //no members    
            }
        }else {
            $sloodle->response->set_status_code(778004);          //line 0       //group doesnt exist    
            $sloodle->response->set_status_descriptor('GROUPS'); //line 0
            //group doesnt exist
        }            
      
     } 

     function addGrp($data){
         global $sCourseObj;
         global $sloodle;
            $bits = explode("|", $data);            
            $groupName =sloodle_clean_for_db(getFieldData($bits[0]));            
            $group = groups_get_group_by_name($sCourseObj->courseId,$groupName);                     
            if ($group){
                //group already exists
                $sloodle->response->set_status_code(778002);             //line 0  - 778002 - group already exists
                $sloodle->response->set_status_descriptor('GROUPS'); //line 0                     
            }else{
                //group doesnt exist, try to create one                
                 $newgroup = new object();
                 $newgroup->courseid = $sCourseObj->courseId;//$sCourseObj->courseId;                 
                 $newgroup->name     = $groupName;            
                 if (!$groupid = groups_create_group(addslashes_recursive($newgroup))) {                     
                    $error = 'Can not create group!'; // should not happen
                    $sloodle->response->set_status_code(778001);             //line 0   for some reason, could not create group    
                    $sloodle->response->set_status_descriptor('GROUPS'); //line 0                     
                 }else{
                     //group creation success
                    $sloodle->response->set_status_code(1);             //line 0 
                    $sloodle->response->set_status_descriptor('OK'); //line 0                     
                    $dataLine = "GROUPNAME:".$groupName."|GROUPID:".$groupid;
                    $sloodle->response->add_data_line($dataLine);//line 9
                    
                 }                 
            }        
         
     }  
     
     function rmGrp($data){         
         global $sloodle, $sCourseObj;
          $data=$sloodle->request->optional_param('data'); 
            $bits = explode("|", $data);
            $groupName = getFieldData($bits[0]);
            
            $groupId = groups_get_group_by_name($sCourseObj->courseId,$groupName);
            if ($groupId){
                if (groups_delete_group($groupId)){                   
                   $sloodle->response->set_status_code(1);          //line 0    
                   $sloodle->response->set_status_descriptor('OK'); //line 0  
                }else{
                    //error deleting group
                   $sloodle->response->set_status_code(778005);          //line 0    
                   $sloodle->response->set_status_descriptor('GROUPS'); //line 0 
                }                                
            }else {
                $sloodle->response->set_status_code(778004);          //line 0    //group doesnt exist    
                $sloodle->response->set_status_descriptor('GROUPS'); //line 0
                //group doesnt exist
            }
            
     }   
     
     function checkEnrols($data){
         global $sloodle, $sCourseObj;  
        //$data is a comma separated list of avatar names 
        // from this list we need to check:      
        //calleruuid:|group:|names:
        $data=$sloodle->request->optional_param('data'); 
        $bits = explode("|", $data);
        $sender = getFieldData($bits[0]);
        $groupName = getFieldData($bits[1]);
        $avs = getFieldData($bits[2]);
        
        $avList = explode(",",$avs);
        $groupId = groups_get_group_by_name($sCourseObj->courseId,$groupName);  
        if ($groupid){
            $groupStatus = Array();
            foreach ($avList as $av){
                $result=0;
                // Is the user found in our sloodle_users table? if not, assign 0
                $avatar_data = get_record('sloodle_users', 'avname', $av);  
                if ($avatar_data){
                    //avatar exists...
                    $avname = $av;
                    $avuuid=$avatar_data->uuid;
                    $user = new SloodleUser( $sloodle );
                    $user->load_avatar($avuuid,$avname);
                    $groupId = groups_get_group_by_name($sCourseObj->courseId,$groupName);  
                    //check if linked
                    if (!$user->load_linked_user()){
                         $result=0; //not linked
                    }else if (groups_is_member($groupId,$user->get_user_id())){
                      $result=2;  //member of the group
                    } else $result=1;  //not a member of the group
                    
                }else {
                    $result=0;
                    
                }
                $groupStatus[]=$result;            
            }
            $sloodle->response->set_status_code(1);          //line 0    
            $sloodle->response->set_status_descriptor('OK'); //line 0    
            $sloodle->response->add_data_line("CALLERID:".$sender);
            $dataLine="GROUPSTATUS:";
            $i=0;
            foreach ($groupStatus as $st){            
                if ($i!=0)$dataLine.=",";
                $dataLine.=$st;
                $i++;     
            }
            $sloodle->response->add_data_line($dataLine);  
     }else {
          $sloodle->response->set_status_code(778004);          //line 0   //group doesnt exist     
          $sloodle->response->set_status_descriptor('GROUPS'); //line 0
          $sloodle->response->add_data_line("null");  
     }
     }
}
?>
